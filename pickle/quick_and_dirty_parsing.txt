------------------------------------------------
                   P A S S  1                   
------------------------------------------------

=== Pass1Visitor(): symtab stack initialized.
[PASS1] visitTranslationUnit: Printing xref table.
[PASS1] visitExternalDeclaration: voidmain(){voida=0;boolb=0;doublec=0;shortd=0;inte=a*b;longf=c+d;}
[PASS1] visitFunctionDefinition: voidmain(){voida=0;boolb=0;doublec=0;shortd=0;inte=a*b;longf=c+d;}
[PASS1] visitDeclarationSpecifiers: void
[PASS1] visitDeclarationSpecifier: void
[PASS1] visitVoidType: void
[PASS1] visitDeclarator: main()
[PASS1] visitDirectDeclarator: main()
	Symbol table created for : main
[PASS1] visitBlockItemList: voida=0;boolb=0;doublec=0;shortd=0;inte=a*b;longf=c+d;
[PASS1] visitBlockItemList: voida=0;boolb=0;doublec=0;shortd=0;inte=a*b;
[PASS1] visitBlockItemList: voida=0;boolb=0;doublec=0;shortd=0;
[PASS1] visitBlockItemList: voida=0;boolb=0;doublec=0;
[PASS1] visitBlockItemList: voida=0;boolb=0;
[PASS1] visitBlockItemList: voida=0;
[PASS1] visitBlockItem: voida=0;
[PASS1] visitDeclaration: voida=0;
[PASS1] visitDeclarationSpecifiers: void
[PASS1] visitDeclarationSpecifier: void
[PASS1] visitVoidType: void
[PASS1] visitInitDeclaratorList: a=0
[PASS1] visitInitDeclarator: a=0
[PASS1] visitDeclarator: a
[PASS1] visitDirectDeclarator: a
	Symbol table created for : a
[PASS1] visitInitializer: 0
[PASS1] visitAssignmentExpression     : 0
[PASS1] visitMultiplicativeExpression : 0
[PASS1] visitUnaryExpression          : 0
[PASS1] visitPostfixExpression        : 0
[PASS1] visitPrimaryExpression        : 0
[PASS1] visitBlockItem: boolb=0;
[PASS1] visitDeclaration: boolb=0;
[PASS1] visitDeclarationSpecifiers: bool
[PASS1] visitDeclarationSpecifier: bool
[PASS1] visitBoolType: bool
[PASS1] visitInitDeclaratorList: b=0
[PASS1] visitInitDeclarator: b=0
[PASS1] visitDeclarator: b
[PASS1] visitDirectDeclarator: b
	Symbol table created for : b
[PASS1] visitInitializer: 0
[PASS1] visitAssignmentExpression     : 0
[PASS1] visitMultiplicativeExpression : 0
[PASS1] visitUnaryExpression          : 0
[PASS1] visitPostfixExpression        : 0
[PASS1] visitPrimaryExpression        : 0
[PASS1] visitBlockItem: doublec=0;
[PASS1] visitDeclaration: doublec=0;
[PASS1] visitDeclarationSpecifiers: double
[PASS1] visitDeclarationSpecifier: double
[PASS1] visitDoubleType: double
[PASS1] visitInitDeclaratorList: c=0
[PASS1] visitInitDeclarator: c=0
[PASS1] visitDeclarator: c
[PASS1] visitDirectDeclarator: c
	Symbol table created for : c
[PASS1] visitInitializer: 0
[PASS1] visitAssignmentExpression     : 0
[PASS1] visitMultiplicativeExpression : 0
[PASS1] visitUnaryExpression          : 0
[PASS1] visitPostfixExpression        : 0
[PASS1] visitPrimaryExpression        : 0
[PASS1] visitBlockItem: shortd=0;
[PASS1] visitDeclaration: shortd=0;
[PASS1] visitDeclarationSpecifiers: short
[PASS1] visitDeclarationSpecifier: short
[PASS1] visitShortType: short
[PASS1] visitInitDeclaratorList: d=0
[PASS1] visitInitDeclarator: d=0
[PASS1] visitDeclarator: d
[PASS1] visitDirectDeclarator: d
	Symbol table created for : d
[PASS1] visitInitializer: 0
[PASS1] visitAssignmentExpression     : 0
[PASS1] visitMultiplicativeExpression : 0
[PASS1] visitUnaryExpression          : 0
[PASS1] visitPostfixExpression        : 0
[PASS1] visitPrimaryExpression        : 0
[PASS1] visitBlockItem: inte=a*b;
[PASS1] visitDeclaration: inte=a*b;
[PASS1] visitDeclarationSpecifiers: int
[PASS1] visitDeclarationSpecifier: int
[PASS1] visitIntType: int
[PASS1] visitInitDeclaratorList: e=a*b
[PASS1] visitInitDeclarator: e=a*b
[PASS1] visitDeclarator: e
[PASS1] visitDirectDeclarator: e
	Symbol table created for : e
[PASS1] visitInitializer: a*b
[PASS1] visitAssignmentExpression     : a*b
[PASS1] visitMultiplicativeExpression : a*b
	a * b
	int32_t_type

[PASS1] visitMultiplicativeExpression : a
[PASS1] visitUnaryExpression          : a
[PASS1] visitPostfixExpression        : a
[PASS1] visitPrimaryExpression        : a
[PASS1] visitUnaryExpression          : b
[PASS1] visitPostfixExpression        : b
[PASS1] visitPrimaryExpression        : b
[PASS1] visitBlockItem: longf=c+d;
[PASS1] visitDeclaration: longf=c+d;
[PASS1] visitDeclarationSpecifiers: long
[PASS1] visitDeclarationSpecifier: long
[PASS1] visitLongType: long
[PASS1] visitInitDeclaratorList: f=c+d
[PASS1] visitInitDeclarator: f=c+d
[PASS1] visitDeclarator: f
[PASS1] visitDirectDeclarator: f
	Symbol table created for : f
[PASS1] visitInitializer: c+d
[PASS1] visitAssignmentExpression     : c+d
[PASS1] visitAdditiveExpression : c+d
	c * d
	double_type

[PASS1] visitAdditiveExpression : c
[PASS1] visitMultiplicativeExpression : c
[PASS1] visitUnaryExpression          : c
[PASS1] visitPostfixExpression        : c
[PASS1] visitPrimaryExpression        : c
[PASS1] visitMultiplicativeExpression : d
[PASS1] visitUnaryExpression          : d
[PASS1] visitPostfixExpression        : d
[PASS1] visitPrimaryExpression        : d
[PASS1] visitCompilationUnit: Printing xref table

===== CROSS-REFERENCE TABLE =====
---------------------------------------------------------------------

*** PROGRAM HELLOOOOOOO_WORRRRRLD ***

Identifier       Line numbers    Type specification
----------       ------------    ------------------
a               
                                 Defined as: variable
                                 Scope nesting level: 1
                                 Type form = scalar, Type id = void
---------------------------------------------------------------------
DF_VARIABLE
not null
b               
                                 Defined as: variable
                                 Scope nesting level: 1
                                 Type form = enumeration, Type id = bool
---------------------------------------------------------------------
DF_VARIABLE
not null
c               
                                 Defined as: variable
                                 Scope nesting level: 1
                                 Type form = scalar, Type id = double
---------------------------------------------------------------------
DF_VARIABLE
not null
d               
                                 Defined as: variable
                                 Scope nesting level: 1
                                 Type form = scalar, Type id = short
---------------------------------------------------------------------
DF_VARIABLE
not null
e               
                                 Defined as: variable
                                 Scope nesting level: 1
                                 Type form = scalar, Type id = int
---------------------------------------------------------------------
DF_VARIABLE
not null
f               
                                 Defined as: variable
                                 Scope nesting level: 1
                                 Type form = scalar, Type id = long
---------------------------------------------------------------------
DF_VARIABLE
not null
main            
                                 Defined as: variable
                                 Scope nesting level: 1
                                 Type form = scalar, Type id = void
---------------------------------------------------------------------
DF_VARIABLE
not null
